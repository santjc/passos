// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: queries.sql

package repository

import (
	"context"

	"github.com/google/uuid"
)

const getProductByID = `-- name: GetProductByID :one
SELECT id, internal_name, reference, locale, time_zone, allow_freesale, instant_confirmation, instant_delivery, availability_required, availability_type, redemption_method, freesale_duration_amount, freesale_duration_unit, product_content_id, product_pricing_id, product_package_id, product_questions_id, created_at, updated_at, deleted_at FROM product WHERE id = $1
`

func (q *Queries) GetProductByID(ctx context.Context, id uuid.UUID) (Product, error) {
	row := q.db.QueryRow(ctx, getProductByID, id)
	var i Product
	err := row.Scan(
		&i.ID,
		&i.InternalName,
		&i.Reference,
		&i.Locale,
		&i.TimeZone,
		&i.AllowFreesale,
		&i.InstantConfirmation,
		&i.InstantDelivery,
		&i.AvailabilityRequired,
		&i.AvailabilityType,
		&i.RedemptionMethod,
		&i.FreesaleDurationAmount,
		&i.FreesaleDurationUnit,
		&i.ProductContentID,
		&i.ProductPricingID,
		&i.ProductPackageID,
		&i.ProductQuestionsID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}
